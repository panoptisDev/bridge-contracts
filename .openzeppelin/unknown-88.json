{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x328A523B71545ddE8CD12a685318F2777D68798D",
      "txHash": "0x656c5d34dffb60e5b3dec2172f3a71c1acf00b3612c5534c2e5c1bc4c3c760c2",
      "kind": "uups"
    },
    {
      "address": "0xDd10E20D37F1d92Fb6Fed21da0aD99Bb16eE94fD",
      "txHash": "0x7674a26ee144a5e8bf39f934313a98c1b77738cc66f5572d6d8541cbb439b9d8",
      "kind": "uups"
    },
    {
      "address": "0x6E6354c95A2461E2802c52bD1AE8a9a10Cac768c",
      "txHash": "0xd9c2797974867db19fb55171582d84e25c080ebe3bedb0d5b3285adc47c48cd2",
      "kind": "uups"
    },
    {
      "address": "0x49f92e64414A8cd9bf14D0D84956E1137A89327A",
      "txHash": "0x7a522c907e637d2306c6be6cc1cafb0fe006ef902fdee5e82d80d7ae2c0a8f2c",
      "kind": "uups"
    }
  ],
  "impls": {
    "3780b1d93f3a4e4b7ced87485daf1ab490d9d019859e5aa5d0133156fba1c7ea": {
      "address": "0xB57420FaD6731B004309D5a0ec7C6C906Adb8df7",
      "txHash": "0xb1aa45140e81d3acf591e5d98561cb7eebc27d8e767bac2e53d2158514c7518a",
      "layout": {
        "solcVersion": "0.8.3",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ChainIdHolding",
            "src": "contracts/lib/ChainIdHolding.sol:6"
          },
          {
            "label": "alreadyClaims",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:28"
          },
          {
            "label": "bridgeApprovers",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_address)dyn_storage",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:29"
          },
          {
            "label": "approverMap",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:30"
          },
          {
            "label": "supportedChainIds",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:31"
          },
          {
            "label": "tokenMapList",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:32"
          },
          {
            "label": "tokenMapSupportCheck",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:33"
          },
          {
            "label": "tokenMap",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_address))",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:34"
          },
          {
            "label": "tokenMapReverse",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_struct(TokenInfo)14306_storage)",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:35"
          },
          {
            "label": "bridgeNFT721Tokens",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:36"
          },
          {
            "label": "nativeFee",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:37"
          },
          {
            "label": "index",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:39"
          },
          {
            "label": "minApprovers",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:40"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "264",
            "type": "t_address_payable",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:41"
          },
          {
            "label": "originChainTokens",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:45"
          },
          {
            "label": "whitelistedTokens",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:46"
          },
          {
            "label": "maxNFTPerBridgeTx",
            "offset": 0,
            "slot": "267",
            "type": "t_uint256",
            "contract": "NFT721Bridge",
            "src": "contracts/generic/NFT721Bridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenInfo)14306_storage)": {
            "label": "mapping(address => struct NFT721Bridge.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_address)": {
            "label": "mapping(bytes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_address))": {
            "label": "mapping(uint256 => mapping(bytes => address))",
            "numberOfBytes": "32"
          },
          "t_struct(TokenInfo)14306_storage": {
            "label": "struct NFT721Bridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0d848cfe98c1ff5207add24bf9d94e39d99b194c41cb856a35c3a1aa8df39c9b": {
      "address": "0x9756AFE5b5FC8bc9157ac1aF2080E61664783D4E",
      "txHash": "0x1efd2d2064b3b644882f9338b958fbd7fa2615843ae19330b33cec72c4451fde",
      "layout": {
        "solcVersion": "0.8.3",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Governable",
            "src": "contracts/generic/Governable.sol:16"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ChainIdHolding",
            "src": "contracts/lib/ChainIdHolding.sol:6"
          },
          {
            "label": "NATIVE_TOKEN_ADDRESS",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "label": "alreadyClaims",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "label": "bridgeApprovers",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_address)dyn_storage",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "label": "approverMap",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "label": "supportedChainIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "label": "tokenMapList",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "label": "tokenMapSupportCheck",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "label": "tokenMap",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "label": "tokenMapReverse",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_address,t_struct(TokenInfo)11689_storage)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "label": "bridgeTokens",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "label": "claimFee",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "label": "index",
            "offset": 0,
            "slot": "264",
            "type": "t_uint256",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:45"
          },
          {
            "label": "minApprovers",
            "offset": 0,
            "slot": "265",
            "type": "t_uint256",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "266",
            "type": "t_address_payable",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:47"
          },
          {
            "label": "feeForTokens",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:48"
          },
          {
            "label": "defaultFeePercentage",
            "offset": 0,
            "slot": "268",
            "type": "t_uint256",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenInfo)11689_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(TokenInfo)11689_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9d5c29791c9a989144db6f7134380a111f79d4559c987d5d288c905939c15b1c": {
      "address": "0xbf4c359C3C49aA243d0250863eB7B71997762083",
      "txHash": "0x35ccb1994d10324263ee637191144cb80bb24af5e059fdfe9938919620203b30",
      "layout": {
        "solcVersion": "0.8.3",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Governable",
            "src": "contracts/generic/Governable.sol:16"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ChainIdHolding",
            "src": "contracts/lib/ChainIdHolding.sol:6"
          },
          {
            "label": "NATIVE_TOKEN_ADDRESS",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "label": "alreadyClaims",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "label": "bridgeApprovers",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_address)dyn_storage",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "label": "approverMap",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "label": "supportedChainIds",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "label": "tokenMapList",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "label": "tokenMapSupportCheck",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "label": "tokenMap",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "label": "tokenMapReverse",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_address,t_struct(TokenInfo)2821_storage)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "label": "bridgeTokens",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "label": "claimFee",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "label": "index",
            "offset": 0,
            "slot": "264",
            "type": "t_uint256",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:45"
          },
          {
            "label": "minApprovers",
            "offset": 0,
            "slot": "265",
            "type": "t_uint256",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "266",
            "type": "t_address_payable",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:47"
          },
          {
            "label": "feeForTokens",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:48"
          },
          {
            "label": "defaultFeePercentage",
            "offset": 0,
            "slot": "268",
            "type": "t_uint256",
            "contract": "GenericBridge",
            "src": "contracts/generic/GenericBridge.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenInfo)2821_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(TokenInfo)2821_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
